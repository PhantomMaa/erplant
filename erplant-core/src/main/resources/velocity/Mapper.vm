#set($doFullClassName = ${tool.getFullClassName(${tableInfo.packageName}, ${tableInfo.databaseName}, ${tableInfo.doName}, "DO")})
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- auto generated by erplant, do not edit -->
<mapper namespace="${tool.getFullClassName(${tableInfo.packageName}, ${tableInfo.databaseName}, ${tableInfo.doName}, "DAO")}">

    <insert id="insert" parameterType="$doFullClassName" #if(${primaryColumn.autoIncrement}) useGeneratedKeys="true" keyProperty="${tool.lineToHump(${primaryColumn.columnName})}" #end>
        INSERT INTO ${tableInfo.tableName} (
            #foreach($column in ${insertColumns})
                ${column.columnName}#if(${foreach.hasNext}),#end
            #end
        ) VALUES (
            #foreach($column in ${insertColumns})
                #{${column.columnValueName}}#if(${foreach.hasNext}),#end
            #end
        )
    </insert>

    <select id="get" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE
        ${primaryColumn.columnName} = #{${primaryColumn.columnValueName}}
    </select>

    #if($supportBatchGet)
    <select id="batchGet" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE
        ${primaryColumn.columnName} in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    #end

    #if($needGenPageNumQuery)
    <select id="pageNumQuery" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        #foreach($column in ${queryWhereColumns})
        #if(${column.notNullQueryField} == true)
        AND ${column.columnName} = #{${column.columnValueName}}
        #else
        <if test="${column.columnValueName} != null">
        #if(${column.likeQuery} == true)
            AND ${column.columnName} LIKE CONCAT('%', #{${column.columnValueName}}, '%')
        #else
            AND ${column.columnName} = #{${column.columnValueName}}
        #end
        </if>
        #end
        #end
        ORDER BY
        <choose>
            <when test="orderColumn != null">
                ${orderColumn}
            </when>
            <otherwise>
                ${primaryColumn.columnName}
            </otherwise>
        </choose>
        ${orderType}
        LIMIT #{start}, #{limit}
    </select>

    #if($needGenOffsetQuery)
    <select id="offsetQuery" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        <choose>
            <when test="orderType == 'ASC'">
                AND id > #{offset}
            </when>
            <when test="orderType == 'DESC'">
                AND id > #{offset}
            </when>
        </choose>
        #foreach($column in ${queryWhereColumns})
        #if(${column.notNullQueryField} == true)
        AND ${column.columnName} = #{${column.columnValueName}}
        #else
        <if test="${column.columnValueName} != null">
        #if(${column.likeQuery} == true)
            AND ${column.columnName} LIKE CONCAT('%', #{${column.columnValueName}}, '%')
        #else
            AND ${column.columnName} = #{${column.columnValueName}}
        #end
        </if>
        #end
        #end
        ORDER BY id ${orderType}
        LIMIT #{limit}
    </select>
    #end

    <select id="count" resultType="java.lang.Integer">
        SELECT count(*)
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        #foreach($column in ${queryWhereColumns})
        #if(${column.notNullQueryField} == true)
        AND ${column.columnName} = #{${column.columnValueName}}
        #else
        <if test="${column.columnValueName} != null">
        #if(${column.likeQuery} == true)
            AND ${column.columnName} LIKE CONCAT('%', #{${column.columnValueName}}, '%')
        #else
            AND ${column.columnName} = #{${column.columnValueName}}
        #end
        </if>
        #end
        #end
    </select>
    #end

    <update id="update">
        UPDATE ${tableInfo.tableName}
        <set>
        #foreach($column in ${updateColumns})
            <if test="${column.columnValueName} != null"> ${column.columnName} = #{${column.columnValueName}}, </if>
        #end
            version = version + 1
        </set>
        WHERE
        ${primaryColumn.columnName} = #{${primaryColumn.columnValueName}} and version = #{version}
    </update>

    <delete id="delete">
        DELETE
        FROM ${tableInfo.tableName}
        WHERE
        ${primaryColumn.columnName} = #{${primaryColumn.columnValueName}}
    </delete>

    #if($supportGetByBk)
    <select id="getByBk" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        #foreach($column in ${bkColumns})
        AND ${column.columnName} = #{${column.columnValueName}}
        #end
    </select>

    <select id="getAndLockByBk" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        #foreach($column in ${bkColumns})
        AND ${column.columnName} = #{${column.columnValueName}}
        #end
        FOR UPDATE
    </select>
    #end

    #foreach($section in ${getByUkSections})
    <select id="getBy${section.bigUkName}" resultType="$doFullClassName">
        SELECT *
        FROM ${tableInfo.tableName}
        WHERE 1 = 1
        #foreach($column in ${section.whereColumns})
        #if(${column.notNullQueryField} == true)
        AND ${column.columnName} = #{${column.columnValueName}}
        #else
        <if test="${column.columnValueName} != null">
            AND ${column.columnName} = #{${column.columnValueName}}
        </if>
        #end
        #end
    </select>

    #end
</mapper>